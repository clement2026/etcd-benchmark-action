---
name: compare
permissions: read-all
on: [ workflow_dispatch ]

env:
  CSV_FILE_PREFIX: https://pub-95669c22c66d453c92c62f20aa0c5b57.r2.dev
  BUCKET: github-action
  BASE: main
  FREQUENCIES: "every_1 every_10 every_100 every_1000 main_2"
#  PR: issue-17098-separate-raft-log-compact-from-snapshot

jobs:
  base:
    uses: ./.github/workflows/benchmark-template.yaml
    with:
      runs-on: self-hosted
      branch: main
  every_1:
    needs: [ base ]
    uses: ./.github/workflows/benchmark-template.yaml
    with:
      runs-on: self-hosted
      branch: every_1
  every_10:
    needs: [ base ]
    uses: ./.github/workflows/benchmark-template.yaml
    with:
      runs-on: self-hosted
      branch: every_10
  every_100:
    needs: [ base ]
    uses: ./.github/workflows/benchmark-template.yaml
    with:
      runs-on: self-hosted
      branch: every_100
  every_1000:
    needs: [ base ]
    uses: ./.github/workflows/benchmark-template.yaml
    with:
      runs-on: self-hosted
      branch: every_1000
  main_2:
    needs: [ base, every_1, every_10, every_100, every_1000 ]
    uses: ./.github/workflows/benchmark-template.yaml
    with:
      runs-on: self-hosted
      branch: main_2

  compare:
    needs: [ base, every_1, every_10, every_100, every_1000, main_2 ]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: 'clement2026/etcd'
          path: etcd
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: etcd/go.sum
      - name: Load Results
        run: |
          echo "${{ needs.base.outputs.results }}" |  base64 -d > $BASE.csv
          
          echo "${{ needs.main_2.outputs.results }}" |  base64 -d > main_2.csv
          echo "${{ needs.every_1.outputs.results }}" |  base64 -d > every_1.csv
          echo "${{ needs.every_10.outputs.results }}" |  base64 -d > every_10.csv
          echo "${{ needs.every_100.outputs.results }}" |  base64 -d > every_100.csv
          echo "${{ needs.every_1000.outputs.results }}" |  base64 -d > every_1000.csv
      - name: build rw-heatmaps
        run: go build -C etcd/tools/rw-heatmaps
      - name: compare
        run: |
          for freq in $FREQUENCIES; do
            ./etcd/tools/rw-heatmaps/rw-heatmaps $BASE.csv $freq.csv -t "$BASE vs $freq" -o $freq
          done
      - name: ls
        run: ls -lh
      - name: zip
        run: zip -r archive.zip *.csv *.jpg ./scripts/*.sh
      - name: write names to env
        run: |
          DATE=$(date '+%Y%m%d-%H-%M-%S')
          
          echo "ZIP_OBJECT_NAME=etcd-benchmark-$DATE.zip" >> $GITHUB_ENV
          
          for freq in $FREQUENCIES; do
            echo "COMPARE_READ_OBJECT_NAME_$freq=etcd-benchmark-$DATE-$freq-read.jpg" >> $GITHUB_ENV
            echo "COMPARE_WRITE_OBJECT_NAM_$freq=etcd-benchmark-$DATE-$freq-write.jpg" >> $GITHUB_ENV
          done
      - name: print md
        run: |
          echo "[archive.zip]($CSV_FILE_PREFIX/$ZIP_OBJECT_NAME)" >> "$GITHUB_STEP_SUMMARY"
          for freq in $FREQUENCIES; do
            echo "### $freq" >> "$GITHUB_STEP_SUMMARY"
            varname=COMPARE_READ_OBJECT_NAME_$freq
            echo "![]($CSV_FILE_PREFIX/${!varname})" >> "$GITHUB_STEP_SUMMARY"
            varname=COMPARE_WRITE_OBJECT_NAM_$freq
            echo "![]($CSV_FILE_PREFIX/${!varname})" >> "$GITHUB_STEP_SUMMARY"
          done
          cat <<EOL >> "$GITHUB_STEP_SUMMARY"
          EOL
      - name: install wrangler
        run: npm install wrangler
      - name: upload to r2
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler r2 object put $BUCKET/$ZIP_OBJECT_NAME --file=archive.zip
          for freq in $FREQUENCIES; do 
            varname=COMPARE_READ_OBJECT_NAME_$freq
            npx wrangler r2 object put $BUCKET/${!varname} --file=$freq'_read.jpg'
            varname=COMPARE_WRITE_OBJECT_NAM_$freq
            npx wrangler r2 object put $BUCKET/${!varname} --file=$freq'_write.jpg'
          done